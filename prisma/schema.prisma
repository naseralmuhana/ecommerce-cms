// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id() @default(cuid())
  name       String      @db.VarChar(255)
  userId     String      @map("user_id")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  billboards Billboard[]
  categories Category[]
  sizes      Size[]
  colors     Color[]
  products   Product[]
  orders     Order[]

  @@map("stores")
}

model Billboard {
  id         String     @id @default(cuid())
  label      String     @db.VarChar(255)
  imageUrl   String     @map("image_url")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  storeId    String     @map("store_id")
  store      Store      @relation(fields: [storeId], references: [id])
  categories Category[]

  @@index([storeId])
  @@map("billboards")
}

model Category {
  id          String            @id @default(cuid())
  name        String            @db.VarChar(255)
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  storeId     String            @map("store_id")
  store       Store             @relation(fields: [storeId], references: [id])
  billboardId String            @map("billboard_id")
  billboard   Billboard         @relation(fields: [billboardId], references: [id])
  products    ProductCategory[]

  @@index([storeId])
  @@index([billboardId])
  @@map("categories")
}

model Size {
  id        String        @id @default(cuid())
  name      String        @db.VarChar(255)
  value     String        @db.VarChar(255)
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  storeId   String        @map("store_id")
  store     Store         @relation(fields: [storeId], references: [id])
  products  ProductSize[]

  @@index([storeId])
  @@map("sizes")
}

model Color {
  id        String         @id @default(cuid())
  name      String         @db.VarChar(255)
  value     String         @db.VarChar(255) // @db.VarChar(6) @length(4, 6) // Minimum 4 characters, maximum 6 characters
  createdAt DateTime       @default(now()) @map("created_at")
  updatedAt DateTime       @updatedAt @map("updated_at")
  storeId   String         @map("store_id")
  store     Store          @relation(fields: [storeId], references: [id])
  products  ProductColor[]

  @@index([storeId])
  @@map("colors")
}

model Product {
  id         String            @id @default(cuid())
  name       String            @db.VarChar(255)
  price      Decimal           @db.Decimal()
  isFeatured Boolean           @default(false) @map("is_featured")
  isArchived Boolean           @default(false) @map("is_archived")
  createdAt  DateTime          @default(now()) @map("created_at")
  updatedAt  DateTime          @updatedAt @map("updated_at")
  storeId    String            @map("store_id")
  store      Store             @relation(fields: [storeId], references: [id])
  images     Image[]
  categories ProductCategory[]
  sizes      ProductSize[]
  colors     ProductColor[]
  orders     ProductOrder[]

  @@index([storeId])
  @@map("products")
}

model Order {
  id        String         @id @default(cuid())
  isPaid    Boolean        @default(false)
  phone     String         @default("")
  address   String         @default("")
  createdAt DateTime       @default(now()) @map("created_at")
  updatedAt DateTime       @updatedAt @map("updated_at")
  storeId   String         @map("store_id")
  store     Store          @relation(fields: [storeId], references: [id])
  products  ProductOrder[]

  @@index([storeId])
  @@map("orders")
}

model Image {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  productId String   @map("product_id")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@map("images")
}

model ProductCategory {
  productId  String   @map("product_id")
  product    Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  categoryId String   @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  assignedAt DateTime @default(now())

  @@id([categoryId, productId])
  @@index([categoryId])
  @@index([productId])
  @@map("products_categories")
}

model ProductSize {
  productId  String   @map("product_id")
  product    Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  sizeId     String   @map("size_id")
  size       Size     @relation(fields: [sizeId], references: [id], onDelete: Restrict)
  assignedAt DateTime @default(now())

  @@id([sizeId, productId])
  @@index([sizeId])
  @@index([productId])
  @@map("products_sizes")
}

model ProductColor {
  productId  String   @map("product_id")
  product    Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  colorId    String   @map("color_id")
  color      Color    @relation(fields: [colorId], references: [id], onDelete: Restrict)
  assignedAt DateTime @default(now())

  @@id([colorId, productId])
  @@index([colorId])
  @@index([productId])
  @@map("products_colors")
}

model ProductOrder {
  productId  String   @map("product_id")
  product    Product  @relation(fields: [productId], references: [id])
  orderId    String   @map("order_id")
  order      Order    @relation(fields: [orderId], references: [id])
  assignedAt DateTime @default(now())

  @@id([orderId, productId])
  @@index([orderId])
  @@index([productId])
  @@map("products_orders")
}
